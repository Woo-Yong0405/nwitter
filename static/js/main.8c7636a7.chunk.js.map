{"version":3,"sources":["fb.js","routes/Auth.js","components/Nweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialCLick","provider","GoogleAuthProvider","GithubAuthProvider","FacebookAuthProvider","signInWithPopup","className","type","placeholder","required","onClick","prev","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","alt","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","useEffect","collection","onSnapshot","snapshot","nweetArray","docs","map","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation1","to","AppRouter","isLoggedIn","Navigation","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c7636a7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n    appId: process.env.REACT_APP_APP_ID,\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService, firebaseInstance } from \"fb\";\nimport React, {useState} from \"react\";\n\nconst Auth = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true); \n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if (name===\"email\") {\n           setEmail(value); \n        } else if (name===\"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(\n                    email, password\n                );\n            } else {\n                data = await authService.signInWithEmailAndPassword(\n                    email, password\n                );\n            }\n            console.log(data); \n        } catch (error) {\n            setError(error.message);\n        }\n    }\n    const toggleAccount = () => setNewAccount(prev => !prev);\n    const onSocialCLick = async (event) => {\n        const {target:{name},\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        } else if (name === \"facebook\") {\n            provider = new firebaseInstance.auth.FacebookAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    }\nreturn (\n    <div className=\"login\" >\n        <h1>Welcome to Nwitter!</h1>\n        <form className=\"formform\" onSubmit={onSubmit}>\n            <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} />\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\n            <input type=\"submit\" value={newAccount ? \"Sign Up\" : \"Log In\"} />\n            {error}\n        </form>\n        <span className=\"loginsignup\" onClick={toggleAccount}>{newAccount ? \"Log In\" : \"Sign Up\"}</span>\n        <div className=\"sociallogin\">\n            <button onClick={onSocialCLick} name=\"google\">Google</button>\n            <button onClick={onSocialCLick} name=\"github\">Github</button>\n            <button onClick={onSocialCLick} name=\"facebook\">Facebook</button>\n        </div>\n        <div className=\"footer\">\n            <footer>Nwitter Version 0.0 Last Editied: 2021.8.30</footer>\n        </div>\n    </div>\n)}\nexport default Auth;","import { dbService, storageService } from \"fb\";\nimport React, { useState } from \"react\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this Nweet?\");\n        if(ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete(); \n        }\n    }\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = (event) => {\n        event.preventDefault();\n        dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    }\n    const onChange = (event) => {\n        const {\n            target:{value},\n        } = event;\n        setNewNweet(value);\n    } \n    return (\n        <div>\n            {\n                editing ? (\n                    <ds className=\"editing\">\n                        <form onSubmit={onSubmit}>\n                            <input className=\"editing_input\" type=\"text\" placeholder=\"Edit your Nweet\" onChange={onChange} value={newNweet} required />\n                            <input className=\"editing_submit\" type=\"submit\" value=\"Update Nweet\" />\n                        </form>\n                        <button className=\"editing_cancel\" onClick={toggleEditing}>Cancel</button>\n                    </ds>\n                ) : (\n                    <sd className=\"nweet-message\">\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img className=\"nweet-message_img\" src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"\" />}\n                        {isOwner && (\n                            <da className=\"isowner\">\n                                <button className=\"isowner_delete\" onClick={onDeleteClick}>Delete Nweet</button>\n                                <button className=\"isowner_edit\" onClick={toggleEditing}>Edit Nweet</button>\n                            </da>\n                        )}\n                    </sd>\n                )\n            }\n        </div>\n    );\n}\n\nexport default Nweet;","import Nweet from \"components/Nweet\";\nimport {v4 as uuidv4} from \"uuid\"\nimport { dbService, storageService } from \"fb\";\nimport React, {useState, useEffect} from \"react\";\n\nconst Home = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [nweets, setNweets] = useState([]);\n    const [attachment, setAttachment] = useState(\"\");\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map(doc => ({id:doc.id, ...doc.data()}))\n            setNweets(nweetArray);\n        })\n    }, []);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        } \n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    }\n    const onChange = (event) => {\n        const {target: {value}, } = event;\n        setNweet(value);\n    }\n    const onFileChange = (event) => {\n        const {\n            target:{files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    }\n    const onClearAttachment = () => {\n        setAttachment(null);\n    }\n    return (\n        <div >\n            <div>\n                {nweets.map(nweet => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n            <form className=\"nweet\" onSubmit={onSubmit}>\n                <input className=\"nweet_input\" value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} required />\n                <input className=\"nweet_image\" type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n                {attachment && <div className=\"nweet_img-preview\">\n                    <img src={attachment} alt=\"\" />\n                    <button onClick={onClearAttachment}>Clear</button>\n                </div>}\n                <input className=\"nweet_nweet\" type=\"submit\" value=\"Nweet\" />\n            </form>\n        <footer>Nwitter Version 0.0 Last Editied: 2021.8.30</footer>\n        </div>\n    )\n};\nexport default Home;","import { authService } from \"fb\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        const ok = window.confirm(\"Are you sure you want to log out?\")\n        if(ok) {\n            authService.signOut();\n            history.push(\"/\");\n        }\n    };\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName : newDisplayName,\n            })\n            refreshUser();\n        }\n    }\n    return (    \n        <da className=\"profile\">\n        <form className=\"profile_form\" onSubmit={onSubmit}>\n            <input className=\"profile_form_input\" type=\"text\" onChange={onChange} placeholder=\"Display Name\" value={newDisplayName} />\n            <input className=\"profile_form_submit\" type=\"submit\" value=\"Update Profile\" />\n        </form>\n        <button className=\"logout\" onClick={onLogOutClick}>Log Out</button>\n        <footer>Nwitter Version 0.0 Last Editied: 2021.8.30</footer>\n        </da>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"components/Styles.css\";\n\nconst Navigation1 = ({userObj}) => <nav>\n    <div id=\"navds\">\n        <p><Link to=\"/\" className=\"link\" >Home</Link></p>\n    </div>\n    <div>\n        <p><Link to=\"/profile\" className=\"link\" >{userObj.displayName}'s Profile</Link></p>\n    </div>\n</nav>\n\nexport default Navigation1;","import React from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\"\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                    </>\n                ) : (\n                    <Route exact path=\"/\">\n                        <Auth />\n                    </Route>\n                )}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fb\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './components/Styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}